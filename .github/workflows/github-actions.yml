name: github-actions
on: [push]
env: 
  TAG: v1.0.0
  NGINX_NAME: nginx.tar.gz
jobs:
  build-nginx:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set ubuntu
        run: |
          sudo apt-get update
          sudo apt-get -y install \
            curl \
            build-essential \
            autoconf
          pwd

      - name: Download package
        run: |
          sudo mkdir -p /home/src /home/nginx/temp
          curl -L http://nginx.org/download/nginx-1.18.0.tar.gz -o /home/src/nginx-1.18.0.tar.gz
          curl -L https://www.openssl.org/source/openssl-1.1.1g.tar.gz -o /home/src/openssl-1.1.1g.tar.gz
          curl -L http://www.zlib.net/zlib-1.2.11.tar.gz -o /home/src/zlib-1.2.11.tar.gz
          curl -L https://sourceforge.net/projects/pcre/files/pcre/8.44/pcre-8.44.tar.gz/download -o /home/src/pcre-8.44.tar.gz
          git clone https://github.com/arut/nginx-rtmp-module.git /home/src/nginx-rtmp-module
          tar -zxvf /home/src/nginx-1.18.0.tar.gz -C /home/nginx
          tar -zxvf /home/src/openssl-1.1.1g.tar.gz -C /home/src
          tar -zxvf /home/src/zlib-1.2.11.tar.gz -C /home/src
          tar -zxvf /home/src/pcre-8.44.tar.gz -C /home/src

      - name: Compile Build
        run: |
          cd /home/src/pcre-8.44 && autoreconf -vfi
          cd /home/nginx/nginx-1.18.0
          ./configure \
          --prefix=.. \
          --sbin-path=sbin/nginx \
          --modules-path=modules \
          --conf-path=conf/nginx.conf \
          --error-log-path=logs/error.log \
          --http-log-path=logs/access.log \
          --pid-path=run/nginx.pid \
          --lock-path=run/nginx.lock \
          --http-client-body-temp-path=temp/client_temp \
          --http-proxy-temp-path=temp/proxy_temp \
          --http-fastcgi-temp-path=temp/fastcgi_temp \
          --http-uwsgi-temp-path=temp/uwsgi_temp \
          --http-scgi-temp-path=temp/scgi_temp \
          --user=nginx \
          --group=nginx \
          --with-compat \
          --with-file-aio \
          --with-threads \
          --with-http_addition_module \
          --with-http_auth_request_module \
          --with-http_dav_module \
          --with-http_flv_module \
          --with-http_gunzip_module \
          --with-http_gzip_static_module \
          --with-http_mp4_module \
          --with-http_random_index_module \
          --with-http_realip_module \
          --with-http_secure_link_module \
          --with-http_slice_module \
          --with-http_ssl_module \
          --with-http_stub_status_module \
          --with-http_sub_module \
          --with-http_v2_module \
          --with-mail \
          --with-mail_ssl_module \
          --with-stream \
          --with-stream_realip_module \
          --with-stream_ssl_module \
          --with-stream_ssl_preread_module \
          --with-cc-opt='-Os -fomit-frame-pointer -Wno-error' \
          --with-ld-opt='-Wl,--as-needed,-rpath,../lib -L../lib -lstdc++ -ldl' \
          --with-pcre=../../src/pcre-8.44 \
          --with-openssl=../../src/openssl-1.1.1g \
          --with-zlib=../../src/zlib-1.2.11 \
          --add-module=../../src/nginx-rtmp-module
          sudo make -j && sudo make install

      - name: Pack Nginx
        run: |
          sudo rm -rf /home/src /home/nginx/nginx-1.18.0
          sudo tar -zcvf $(pwd)/${{ NGINX_NAME }} /home/nginx

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ TAG }}
          release_name: Release ${{ TAG }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ NGINX_NAME }}
          asset_name: ${{ NGINX_NAME }}
          asset_content_type: application/zip
